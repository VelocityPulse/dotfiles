set nocompatible
set number
set noexpandtab
syntax on
let mapleader=" "

set listchars=eol:Â¬,tab:>\ ,trail:~,extends:>,precedes:<
""MAPINGS
inoremap kj <Esc>

nnoremap <leader>j :bn<CR>
nnoremap <leader>k :bp<CR>
nnoremap <C-l> <C-w>l
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j

nnoremap <leader>w :w<CR>
nnoremap <leader>l :set list!<CR>
nnoremap <leader>, :sh<CR>
nnoremap <leader>; mmA;<Esc>`m
nnoremap <leader>g mmMmngg=G`nzz`m
nnoremap <leader><leader> i_<Esc>r
nnoremap <leader>n :noh<CR>
nnoremap <leader>t i<tab><Esc>

noremap j gj
noremap k gk


nnoremap gj ddp
nnoremap gk ddkP
nnoremap go o<Esc>k

""NERDTree
nnoremap <leader>t :NERDTreeToggle<CR>

"Quitter NERDTree automatiquement a la fermeture du dernier buffer
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

""/NERDTree

"""""/MAPPINGS

augroup filetypec
	autocmd!
	autocmd FileType c,cpp,go nnoremap <leader>c I//<Esc>
	autocmd FileType c,cpp,go nnoremap <leader>u _2x
	autocmd FileType c,cpp,go vnoremap <leader>c I//<Esc>
	autocmd FileType c,cpp,go vnoremap <leader>u _2x
	autocmd FileType c,cpp iabbrev #i #include
augroup END

set t_Co=256
colorscheme molokai

execute pathogen#infect()

let g:airline_theme='murmur'

""Trailing whitespaces
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/

""SYNTASTIC
" plugins expect bash - not fish, zsh, etc
set shell=bash
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0



autocmd BufWritePre * :%s/\s\+$//e
set viminfo='100,\"2500,:200,%,n~/.viminfo




"""GO
" use goimports for formatting
let g:go_fmt_command = "goimports"
let g:syntastic_go_checkers = ['go', 'golint']

" turn highlighting on
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>gd <Plug>(go-doc-vertical)
